
#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	server{
		# Server 80 is for those transations with other operation back-end sytem in internal network.
		# 	
		listen		80;
                server_name  localhost;
		root /work/www/;
		autoindex on;
		autoindex_exact_size off;
		autoindex_localtime on;

        location / {
			# Django application port
			#add_header Access-Control-Allow-Origin *;
                        #add_header Access-Control-Allow-Credentials true;
			#add_header Access-Control-Allow-Headers X-Requested-With;
			#add_header Access-Control-Allow-Methods GET,POST,DELETE,PUT,OPTIONS;
			proxy_pass http://127.0.0.1:8000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        client_max_body_size     1000m;
        }
		
		location /static/ {
			alias /work/ally/ally_backend/static/;
		}
                location /h5/{
                        alias /work/www/h5/;
                }
		location /ally/ {
			alias /work/ally/client_publish/;
		}
	}	
	

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
